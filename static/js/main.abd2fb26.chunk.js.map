{"version":3,"sources":["lib/isAuth.js","component/Welcome.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["userType","localStorage","getItem","isAuth","ErrorPage","props","Grid","container","item","direction","alignItems","justify","style","padding","minHeight","Typography","variant","Welcome","Button","color","href","justifyContent","spacing","xs","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","Navbar","classes","history","useHistory","handleClick","location","console","log","push","AppBar","position","Toolbar","className","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","type","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","inputBox","width","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","Logout","useEffect","removeItem","FileUploadInput","uploadTo","identifier","file","setFile","uploadPercentage","setUploadPercentage","height","icon","display","files","name","InputProps","readOnly","FormData","append","Axios","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","statusText","handleUpload","disabled","CloudUpload","marginTop","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","substr","updatedDetails","trim","handleLogin","verified","handleLoginRecruiter","button","jobTileOuter","margin","boxSizing","popupDialog","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","minWidth","marginBottom","_id","Authorization","FilterPopup","searchOptions","setSearchOptions","getData","FormControlLabel","control","Checkbox","checked","fullTime","partTime","wfh","Slider","valueLabelDisplay","valueLabelFormat","marks","fullWidth","border","borderRadius","sort","for","desc","Home","setJobs","filterOpen","setFilterOpen","query","searchParams","asc","queryString","join","address","get","today","onKeyPress","ev","textAlign","statusBlock","textTransform","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","background","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","alignSelf","Profile","profileDetails","setProfileDetails","edu","onAdd","chip","onDelete","index","splice","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","MyJobs","avatar","colorSet","updateStatus","statusData","buttonSet","Avatar","src","jobApplicant","method","responseType","Blob","fileURL","URL","createObjectURL","window","getResume","JobApplications","useParams","all","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","defaults","baseURL","paddingTop","createContext","App","popup","Provider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd2fb26.chunk.js","sourcesContent":["const isAuth = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const userType = () => {\r\n  return localStorage.getItem(\"type\");\r\n};\r\n\r\nexport default isAuth;\r\n","import { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport isAuth, { userType } from \"../lib/isAuth\";\r\n\r\nconst Welcome = (props) => {\r\n  if(isAuth()){\r\n    if(userType() === \"recruiter\")\r\n    {\r\n      return (\r\n        <Grid \r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}>\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n        </Grid>\r\n        <Button variant=\"contained\" color=\"primary\" href=\"/home\">Add Jobs</Button>\r\n        </Grid>\r\n      );\r\n    }else{\r\n       return (\r\n        <Grid container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}>\r\n          <Grid item>\r\n            <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n          </Grid>\r\n          <Button variant=\"contained\" color=\"primary\" href=\"/home\">See Jobs</Button>\r\n          </Grid>\r\n       );\r\n      \r\n    }\r\n  }else{\r\n    return (\r\n      <>\r\n      <Grid container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\" spacing={2} >\r\n        <Grid item xs={8}>\r\n          <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n        <Typography variant=\"h5\">Login/Signup to see jobs available</Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" href=\"/login\">Login</Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" href=\"/signup\">Sign up</Button>\r\n          </Grid>\r\n      </Grid>\r\n        </>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\nexport const ErrorPage = (props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport isAuth, { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleClick = (location) => {\r\n    console.log(location);\r\n    history.push(location);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Job Portal\r\n        </Typography>\r\n        {isAuth() ? (\r\n          userType() === \"recruiter\" ? (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\r\n                Add Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\r\n                My Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\r\n                Employees\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => handleClick(\"/applications\")}\r\n              >\r\n                Applications\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/login\")}>\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => handleClick(\"/signup\")}>\r\n              Signup\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst PasswordInput = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\r\n        <InputLabel htmlFor=\"outlined-adornment-password\">\r\n          {props.label}\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={handleShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          value={props.value}\r\n          onChange={(event) => props.onChange(event)}\r\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\r\n          className={props.className}\r\n          onBlur={props.onBlur ? props.onBlur : null}\r\n        />\r\n        {props.helperText ? (\r\n          <FormHelperText>{props.helperText}</FormHelperText>\r\n        ) : null}\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nconst EmailInput = (props) => {\r\n  const {\r\n    label,\r\n    value,\r\n    onChange,\r\n    inputErrorHandler,\r\n    handleInputError,\r\n    required,\r\n    className,\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      variant=\"outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={inputErrorHandler.email.message}\r\n      onBlur={(event) => {\r\n        if (event.target.value === \"\") {\r\n          if (required) {\r\n            handleInputError(\"email\", true, \"Email is required\");\r\n          } else {\r\n            handleInputError(\"email\", false, \"\");\r\n          }\r\n        } else {\r\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (re.test(String(event.target.value).toLowerCase())) {\r\n            handleInputError(\"email\", false, \"\");\r\n          } else {\r\n            handleInputError(\"email\", true, \"Incorrect email format\");\r\n          }\r\n        }\r\n      }}\r\n      error={inputErrorHandler.email.error}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n","export const server = \" https://onlinejobportal616.web.app\";\r\n\r\nconst apiList = {\r\n  login: `${server}/auth/login`,\r\n  signup: `${server}/auth/signup`,\r\n  uploadResume: `${server}/upload/resume`,\r\n  uploadProfileImage: `${server}/upload/profile`,\r\n  jobs: `${server}/api/jobs`,\r\n  applications: `${server}/api/applications`,\r\n  rating: `${server}/api/rating`,\r\n  user: `${server}/api/user`,\r\n  applicants: `${server}/api/applicants`,\r\n};\r\n\r\nexport default apiList;\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"300px\",\r\n  },\r\n  submitButton: {\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setLoginDetails({\r\n      ...loginDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\r\n      return inputErrorHandler[obj].error;\r\n    });\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.login, loginDetails)\r\n        .then((response) => {\r\n          \r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          // console.log(err.response);\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Login\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={loginDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleLogin()}\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst Logout = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"type\");\r\n    setPopup({\r\n      open: true,\r\n      severity: \"success\",\r\n      message: \"Logged out successfully\",\r\n    });\r\n  }, []);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst FileUploadInput = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const { uploadTo, identifier, handleInput } = props;\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const handleUpload = () => {\r\n    console.log(file);\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    Axios.post(uploadTo, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        setUploadPercentage(\r\n          parseInt(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          )\r\n        );\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        handleInput(identifier, response.data.url);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.statusText,\r\n          //   message: err.response.data\r\n          //     ? err.response.data.message\r\n          //     : err.response.statusText,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\r\n      <Grid container item xs={12} spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {props.icon}\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                console.log(event.target.files);\r\n                setUploadPercentage(0);\r\n                setFile(event.target.files[0]);\r\n              }}\r\n              // onChange={onChange}\r\n              // onChange={\r\n              //   (e) => {}\r\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\r\n              // }\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label={props.label}\r\n            value={file ? file.name || \"\" : \"\"}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            onClick={() => handleUpload()}\r\n            disabled={file ? false : true}\r\n          >\r\n            <CloudUpload />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {uploadPercentage !== 0 ? (\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FileUploadInput;\r\n","import { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    console.log(updatedDetails);\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                // value={files.resume}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     resume: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                // value={files.profileImage}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     profileImage: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n != \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phone}\r\n                onChange={(phone) => setPhone(phone)}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// {/* <Grid item>\r\n//           <PasswordInput\r\n//             label=\"Re-enter Password\"\r\n//             value={signupDetails.tmpPassword}\r\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\r\n//             className={classes.inputBox}\r\n//             labelWidth={140}\r\n//             helperText={inputErrorHandler.tmpPassword.message}\r\n//             error={inputErrorHandler.tmpPassword.error}\r\n//             onBlur={(event) => {\r\n//               if (event.target.value !== signupDetails.password) {\r\n//                 handleInputError(\r\n//                   \"tmpPassword\",\r\n//                   true,\r\n//                   \"Passwords are not same.\"\r\n//                 );\r\n//               }\r\n//             }}\r\n//           />\r\n//         </Grid> */}\r\n","\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  const { job } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [sop, setSop] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSop(\"\");\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.log(job._id);\r\n    console.log(sop);\r\n    axios\r\n      .post(\r\n        `${apiList.jobs}/${job._id}/applications`,\r\n        {\r\n          sop: sop,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const deadline = new Date(job.deadline).toLocaleDateString();\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\r\n          <Grid item>Application Deadline : {deadline}</Grid>\r\n\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            disabled={userType() === \"recruiter\"}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"50%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Write SOP (upto 250 words)\"\r\n            multiline\r\n            rows={8}\r\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            value={sop}\r\n            onChange={(event) => {\r\n              if (\r\n                event.target.value.split(\" \").filter(function (n) {\r\n                  return n != \"\";\r\n                }).length <= 250\r\n              ) {\r\n                setSop(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => handleApply()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(\r\n          response.data.filter((obj) => {\r\n            const today = new Date();\r\n            const deadline = new Date(obj.deadline);\r\n            return deadline > today;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Pagination count={10} color=\"primary\" />\r\n        </Grid> */}\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [userData, setUserData] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editDetails = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <MultifieldInput\r\n                education={education}\r\n                setEducation={setEducation}\r\n              />\r\n              <Grid item>\r\n                <ChipInput\r\n                  className={classes.inputBox}\r\n                  label=\"Skills\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Press enter to add skills\"\r\n                  value={profileDetails.skills}\r\n                  onAdd={(chip) =>\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: [...profileDetails.skills, chip],\r\n                    })\r\n                  }\r\n                  onDelete={(chip, index) => {\r\n                    let skills = profileDetails.skills;\r\n                    skills.splice(index, 1);\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: skills,\r\n                    });\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Resume (.pdf)\"\r\n                  icon={<DescriptionIcon />}\r\n                  uploadTo={apiList.uploadResume}\r\n                  handleInput={handleInput}\r\n                  identifier={\"resume\"}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Profile Photo (.jpg/.png)\"\r\n                  icon={<FaceIcon />}\r\n                  uploadTo={apiList.uploadProfileImage}\r\n                  handleInput={handleInput}\r\n                  identifier={\"profile\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\r\n\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst CreateJobs = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [jobDetails, setJobDetails] = useState({\r\n    title: \"\",\r\n    maxApplicants: 100,\r\n    maxPositions: 30,\r\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n      .toISOString()\r\n      .substr(0, 16),\r\n    skillsets: [],\r\n    jobType: \"Full Time\",\r\n    duration: 0,\r\n    salary: 0,\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(jobDetails);\r\n    axios\r\n      .post(apiList.jobs, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        setJobDetails({\r\n          title: \"\",\r\n          maxApplicants: 100,\r\n          maxPositions: 30,\r\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n            .toISOString()\r\n            .substr(0, 16),\r\n          skillsets: [],\r\n          jobType: \"Full Time\",\r\n          duration: 0,\r\n          salary: 0,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Add Job</Typography>\r\n        </Grid>\r\n        <Grid item container xs direction=\"column\" justify=\"center\">\r\n          <Grid item>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    value={jobDetails.title}\r\n                    onChange={(event) =>\r\n                      handleInput(\"title\", event.target.value)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Press enter to add skills\"\r\n                    value={jobDetails.skillsets}\r\n                    onAdd={(chip) =>\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: [...jobDetails.skillsets, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skillsets = jobDetails.skillsets;\r\n                      skillsets.splice(index, 1);\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: skillsets,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Job Type\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.jobType}\r\n                    onChange={(event) => {\r\n                      handleInput(\"jobType\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\r\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\r\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Duration\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.duration}\r\n                    onChange={(event) => {\r\n                      handleInput(\"duration\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value={0}>Flexible</MenuItem>\r\n                    <MenuItem value={1}>1 Month</MenuItem>\r\n                    <MenuItem value={2}>2 Months</MenuItem>\r\n                    <MenuItem value={3}>3 Months</MenuItem>\r\n                    <MenuItem value={4}>4 Months</MenuItem>\r\n                    <MenuItem value={5}>5 Months</MenuItem>\r\n                    <MenuItem value={6}>6 Months</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Salary\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.salary}\r\n                    onChange={(event) => {\r\n                      handleInput(\"salary\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 0 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Application Deadline\"\r\n                    type=\"datetime-local\"\r\n                    value={jobDetails.deadline}\r\n                    onChange={(event) => {\r\n                      handleInput(\"deadline\", event.target.value);\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Maximum Number Of Applicants\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxApplicants}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxApplicants\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Positions Available\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxPositions}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxPositions\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Create Job\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { job, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [jobDetails, setJobDetails] = useState(job);\r\n\r\n  console.log(jobDetails);\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (location) => {\r\n    history.push(location);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(job._id);\r\n    axios\r\n      .delete(`${apiList.jobs}/${job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const handleJobUpdate = () => {\r\n    axios\r\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleCloseUpdate();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleCloseUpdate();\r\n      });\r\n  };\r\n\r\n  const postedOn = new Date(job.dateOfPosting);\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\r\n          <Grid item>\r\n            Remaining Number of Positions:{\" \"}\r\n            {job.maxPositions - job.acceptedCandidates}\r\n          </Grid>\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\r\n            >\r\n              View Applications\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpenUpdate(true);\r\n              }}\r\n              style={{\r\n                background: \"#FC7A1E\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Delete Job\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleDelete()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleClose()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Update Details\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={3}\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Application Deadline\"\r\n                type=\"datetime-local\"\r\n                value={jobDetails.deadline.substr(0, 16)}\r\n                onChange={(event) => {\r\n                  handleInput(\"deadline\", event.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Maximum Number Of Applicants\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxApplicants}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxApplicants\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Positions Available\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxPositions}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxPositions\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleJobUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseUpdate()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst MyJobs = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [`myjobs=1`];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] !== 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">My Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} getData={getData} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          {/* <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid> */}\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"jobTitle\"\r\n                    checked={searchOptions.sort[\"job.title\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"jobTitle\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"jobTitle\">\r\n                    <Typography>Job Title</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"job.title\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            desc: !searchOptions.sort[\"job.title\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"job.title\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfJoining\"\r\n                    checked={searchOptions.sort.dateOfJoining.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfJoining\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfJoining\">\r\n                    <Typography>Date of Joining</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfJoining.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            desc: !searchOptions.sort.dateOfJoining.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfJoining.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {/* {buttonSet[application.status]} */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        setPhone(response.data.contactNumber);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs style={{ width: \"100%\" }}>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              //   width: \"60%\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Bio (upto 250 words)\"\r\n                  multiline\r\n                  rows={8}\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"outlined\"\r\n                  value={profileDetails.bio}\r\n                  onChange={(event) => {\r\n                    if (\r\n                      event.target.value.split(\" \").filter(function (n) {\r\n                        return n != \"\";\r\n                      }).length <= 250\r\n                    ) {\r\n                      handleInput(\"bio\", event.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  value={phone}\r\n                  onChange={(phone) => setPhone(phone)}\r\n                  style={{ width: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Snackbar, Slide } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n","import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\n// eslint-disable-next-line\r\nimport { userType } from \"./lib/isAuth\";\r\n// axios\r\nimport axios from \"axios\";\r\n\r\n// axios.defaults.baseURL = \"https://jobportal-b.web.app/\";\r\naxios.defaults.baseURL = \"https://ptech12.github.io/onlinejobportal/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}